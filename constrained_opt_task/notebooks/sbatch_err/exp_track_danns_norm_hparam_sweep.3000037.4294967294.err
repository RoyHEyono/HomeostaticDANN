[=== Module anaconda/3 loaded ===]
/home/mila/r/roy.eyono/.conda/envs/ffcv_eg/lib/python3.9/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.5
  warnings.warn(f"A NumPy version >={np_minversion} and <{np_maxversion}"
(0l(B Arguments defined(0qqqqqqqqqwqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk(B
(0x(B Parameter                 (0x(B Value                                                  (0x(B
(0tqqqqqqqqqqqqqqqqqqqqqqqqqqqnqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqu(B
(0x(B train.dataset             (0x(B cifar10                                                (0x(B
(0x(B train.batch_size          (0x(B 512                                                    (0x(B
(0x(B train.epochs              (0x(B 50                                                     (0x(B
(0x(B train.seed                (0x(B 1                                                      (0x(B
(0x(B train.use_testset         (0x(B True                                                   (0x(B
(0x(B data.subtract_mean        (0x(B False                                                  (0x(B
(0x(B model.name                (0x(B resnet50                                               (0x(B
(0x(B model.normtype            (0x(B c_ln_sub                                               (0x(B
(0x(B model.is_dann             (0x(B True                                                   (0x(B
(0x(B model.n_outputs           (0x(B 10                                                     (0x(B
(0x(B opt.algorithm             (0x(B SGD                                                    (0x(B
(0x(B opt.exponentiated         (0x(B False                                                  (0x(B
(0x(B opt.wd                    (0x(B 0.001                                                  (0x(B
(0x(B opt.momentum              (0x(B 0.75                                                   (0x(B
(0x(B opt.lr                    (0x(B 0.1                                                    (0x(B
(0x(B opt.use_sep_inhib_lrs     (0x(B True                                                   (0x(B
(0x(B opt.use_sep_bias_gain_lrs (0x(B False                                                  (0x(B
(0x(B opt.eg_normalise          (0x(B False                                                  (0x(B
(0x(B opt.nesterov              (0x(B False                                                  (0x(B
(0x(B opt.inhib_lrs.wei         (0x(B 0.0001                                                 (0x(B
(0x(B opt.inhib_lrs.wix         (0x(B 0.0001                                                 (0x(B
(0x(B exp.ckpt_dir              (0x(B /home/mila/r/roy.eyono/danns_eg/scale_exps/checkpoints (0x(B
(0x(B exp.num_workers           (0x(B 4                                                      (0x(B
(0x(B exp.use_autocast          (0x(B True                                                   (0x(B
(0x(B exp.log_interval          (0x(B 1                                                      (0x(B
(0x(B exp.data_dir              (0x(B                                                        (0x(B
(0x(B exp.use_wandb             (0x(B True                                                   (0x(B
(0x(B exp.wandb_project         (0x(B Normalization_DANN_Test                                (0x(B
(0x(B exp.wandb_entity          (0x(B project_danns                                          (0x(B
(0x(B exp.wandb_tag             (0x(B default                                                (0x(B
(0x(B exp.save_results          (0x(B False                                                  (0x(B
(0mqqqqqqqqqqqqqqqqqqqqqqqqqqqvqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj(B
wandb: Currently logged in as: royeyono (project_danns). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.14.0 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.13.10
wandb: Run data is saved locally in /home/mila/r/roy.eyono/scratch/wandb/run-20230324_181801-2mtd4h9m
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run restful-grass-30
wandb: ⭐️ View project at https://wandb.ai/project_danns/Normalization_DANN_Test
wandb: 🚀 View run at https://wandb.ai/project_danns/Normalization_DANN_Test/runs/2mtd4h9m
  0%|          | 0/50000 [00:00<?, ?it/s] 34%|███▎      | 16800/50000 [00:00<00:00, 167751.39it/s] 68%|██████▊   | 33900/50000 [00:01<00:00, 18347.56it/s]  84%|████████▎ | 41800/50000 [00:02<00:00, 18704.85it/s] 94%|█████████▍| 46900/50000 [00:02<00:00, 17049.60it/s]100%|██████████| 50000/50000 [00:03<00:00, 16623.98it/s]
  0%|          | 0/10000 [00:00<?, ?it/s] 88%|████████▊ | 8800/10000 [00:00<00:00, 87859.53it/s]100%|██████████| 10000/10000 [00:00<00:00, 19920.44it/s]
  0%|          | 0/50 [00:00<?, ?it/s]/home/mila/r/roy.eyono/.conda/envs/ffcv_eg/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:129: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
Train/test accuracy after 1 epochs: 25.87/26.65:   0%|          | 0/50 [00:15<?, ?it/s]Train/test accuracy after 1 epochs: 25.87/26.65:   2%|▏         | 1/50 [00:15<12:23, 15.17s/it]Train/test accuracy after 2 epochs: 40.12/41.24:   2%|▏         | 1/50 [00:22<12:23, 15.17s/it]Train/test accuracy after 2 epochs: 40.12/41.24:   4%|▍         | 2/50 [00:22<08:19, 10.41s/it]Train/test accuracy after 3 epochs: 42.05/42.29:   4%|▍         | 2/50 [00:29<08:19, 10.41s/it]Train/test accuracy after 3 epochs: 42.05/42.29:   6%|▌         | 3/50 [00:29<06:58,  8.90s/it]Train/test accuracy after 4 epochs: 47.70/48.03:   6%|▌         | 3/50 [00:36<06:58,  8.90s/it]Train/test accuracy after 4 epochs: 47.70/48.03:   8%|▊         | 4/50 [00:36<06:18,  8.23s/it]Train/test accuracy after 5 epochs: 13.62/13.59:   8%|▊         | 4/50 [00:43<06:18,  8.23s/it]Train/test accuracy after 5 epochs: 13.62/13.59:  10%|█         | 5/50 [00:43<05:54,  7.87s/it]Train/test accuracy after 6 epochs: 26.29/27.08:  10%|█         | 5/50 [00:50<05:54,  7.87s/it]Train/test accuracy after 6 epochs: 26.29/27.08:  12%|█▏        | 6/50 [00:50<05:35,  7.63s/it]Train/test accuracy after 7 epochs: 10.05/9.77:  12%|█▏        | 6/50 [00:58<05:35,  7.63s/it] Train/test accuracy after 7 epochs: 10.05/9.77:  14%|█▍        | 7/50 [00:58<05:21,  7.48s/it]Train/test accuracy after 8 epochs: 21.48/21.92:  14%|█▍        | 7/50 [01:05<05:21,  7.48s/it]Train/test accuracy after 8 epochs: 21.48/21.92:  16%|█▌        | 8/50 [01:05<05:08,  7.35s/it]Train/test accuracy after 9 epochs: 21.94/22.39:  16%|█▌        | 8/50 [01:12<05:08,  7.35s/it]Train/test accuracy after 9 epochs: 21.94/22.39:  18%|█▊        | 9/50 [01:12<04:58,  7.28s/it]Train/test accuracy after 10 epochs: 30.23/31.15:  18%|█▊        | 9/50 [01:19<04:58,  7.28s/it]Train/test accuracy after 10 epochs: 30.23/31.15:  20%|██        | 10/50 [01:19<04:49,  7.23s/it]Train/test accuracy after 11 epochs: 36.23/37.12:  20%|██        | 10/50 [01:26<04:49,  7.23s/it]Train/test accuracy after 11 epochs: 36.23/37.12:  22%|██▏       | 11/50 [01:26<04:41,  7.22s/it]Train/test accuracy after 12 epochs: 44.84/45.10:  22%|██▏       | 11/50 [01:33<04:41,  7.22s/it]Train/test accuracy after 12 epochs: 44.84/45.10:  24%|██▍       | 12/50 [01:33<04:34,  7.24s/it]Train/test accuracy after 13 epochs: 46.47/46.85:  24%|██▍       | 12/50 [01:41<04:34,  7.24s/it]Train/test accuracy after 13 epochs: 46.47/46.85:  26%|██▌       | 13/50 [01:41<04:27,  7.22s/it]Train/test accuracy after 14 epochs: 49.84/50.10:  26%|██▌       | 13/50 [01:48<04:27,  7.22s/it]Train/test accuracy after 14 epochs: 49.84/50.10:  28%|██▊       | 14/50 [01:48<04:19,  7.22s/it]Train/test accuracy after 15 epochs: 45.66/45.51:  28%|██▊       | 14/50 [01:55<04:19,  7.22s/it]Train/test accuracy after 15 epochs: 45.66/45.51:  30%|███       | 15/50 [01:55<04:12,  7.21s/it]Train/test accuracy after 16 epochs: 55.55/55.00:  30%|███       | 15/50 [02:02<04:12,  7.21s/it]Train/test accuracy after 16 epochs: 55.55/55.00:  32%|███▏      | 16/50 [02:02<04:05,  7.21s/it]Train/test accuracy after 17 epochs: 57.08/56.60:  32%|███▏      | 16/50 [02:10<04:05,  7.21s/it]Train/test accuracy after 17 epochs: 57.08/56.60:  34%|███▍      | 17/50 [02:10<03:58,  7.24s/it]Train/test accuracy after 18 epochs: 58.53/56.97:  34%|███▍      | 17/50 [02:17<03:58,  7.24s/it]Train/test accuracy after 18 epochs: 58.53/56.97:  36%|███▌      | 18/50 [02:17<03:51,  7.22s/it]Train/test accuracy after 19 epochs: 61.92/60.53:  36%|███▌      | 18/50 [02:24<03:51,  7.22s/it]Train/test accuracy after 19 epochs: 61.92/60.53:  38%|███▊      | 19/50 [02:24<03:43,  7.20s/it]Train/test accuracy after 20 epochs: 61.74/60.85:  38%|███▊      | 19/50 [02:31<03:43,  7.20s/it]Train/test accuracy after 20 epochs: 61.74/60.85:  40%|████      | 20/50 [02:31<03:35,  7.18s/it]Train/test accuracy after 21 epochs: 64.40/62.79:  40%|████      | 20/50 [02:38<03:35,  7.18s/it]Train/test accuracy after 21 epochs: 64.40/62.79:  42%|████▏     | 21/50 [02:38<03:28,  7.17s/it]Train/test accuracy after 22 epochs: 66.45/64.74:  42%|████▏     | 21/50 [02:45<03:28,  7.17s/it]Train/test accuracy after 22 epochs: 66.45/64.74:  44%|████▍     | 22/50 [02:45<03:21,  7.18s/it]Train/test accuracy after 23 epochs: 66.14/64.25:  44%|████▍     | 22/50 [02:53<03:21,  7.18s/it]Train/test accuracy after 23 epochs: 66.14/64.25:  46%|████▌     | 23/50 [02:53<03:14,  7.19s/it]Train/test accuracy after 24 epochs: 69.15/67.82:  46%|████▌     | 23/50 [03:00<03:14,  7.19s/it]Train/test accuracy after 24 epochs: 69.15/67.82:  48%|████▊     | 24/50 [03:00<03:06,  7.17s/it]Train/test accuracy after 25 epochs: 69.24/67.24:  48%|████▊     | 24/50 [03:07<03:06,  7.17s/it]Train/test accuracy after 25 epochs: 69.24/67.24:  50%|█████     | 25/50 [03:07<02:59,  7.19s/it]Train/test accuracy after 26 epochs: 71.58/69.52:  50%|█████     | 25/50 [03:14<02:59,  7.19s/it]Train/test accuracy after 26 epochs: 71.58/69.52:  52%|█████▏    | 26/50 [03:14<02:52,  7.20s/it]Train/test accuracy after 27 epochs: 73.21/70.63:  52%|█████▏    | 26/50 [03:21<02:52,  7.20s/it]Train/test accuracy after 27 epochs: 73.21/70.63:  54%|█████▍    | 27/50 [03:21<02:45,  7.20s/it]Train/test accuracy after 28 epochs: 72.90/70.75:  54%|█████▍    | 27/50 [03:29<02:45,  7.20s/it]Train/test accuracy after 28 epochs: 72.90/70.75:  56%|█████▌    | 28/50 [03:29<02:38,  7.19s/it]Train/test accuracy after 29 epochs: 74.07/71.35:  56%|█████▌    | 28/50 [03:36<02:38,  7.19s/it]Train/test accuracy after 29 epochs: 74.07/71.35:  58%|█████▊    | 29/50 [03:36<02:31,  7.20s/it]Train/test accuracy after 30 epochs: 76.48/73.62:  58%|█████▊    | 29/50 [03:43<02:31,  7.20s/it]Train/test accuracy after 30 epochs: 76.48/73.62:  60%|██████    | 30/50 [03:43<02:23,  7.19s/it]Train/test accuracy after 31 epochs: 76.79/74.02:  60%|██████    | 30/50 [03:50<02:23,  7.19s/it]Train/test accuracy after 31 epochs: 76.79/74.02:  62%|██████▏   | 31/50 [03:50<02:16,  7.20s/it]Train/test accuracy after 32 epochs: 76.14/73.50:  62%|██████▏   | 31/50 [03:57<02:16,  7.20s/it]Train/test accuracy after 32 epochs: 76.14/73.50:  64%|██████▍   | 32/50 [03:57<02:09,  7.20s/it]Train/test accuracy after 33 epochs: 77.75/74.69:  64%|██████▍   | 32/50 [04:05<02:09,  7.20s/it]Train/test accuracy after 33 epochs: 77.75/74.69:  66%|██████▌   | 33/50 [04:05<02:02,  7.20s/it]Train/test accuracy after 34 epochs: 77.81/75.00:  66%|██████▌   | 33/50 [04:12<02:02,  7.20s/it]Train/test accuracy after 34 epochs: 77.81/75.00:  68%|██████▊   | 34/50 [04:12<01:55,  7.20s/it]Train/test accuracy after 35 epochs: 78.33/75.17:  68%|██████▊   | 34/50 [04:19<01:55,  7.20s/it]Train/test accuracy after 35 epochs: 78.33/75.17:  70%|███████   | 35/50 [04:19<01:48,  7.21s/it]Train/test accuracy after 36 epochs: 79.56/76.32:  70%|███████   | 35/50 [04:26<01:48,  7.21s/it]Train/test accuracy after 36 epochs: 79.56/76.32:  72%|███████▏  | 36/50 [04:26<01:40,  7.21s/it]Train/test accuracy after 37 epochs: 78.80/75.32:  72%|███████▏  | 36/50 [04:33<01:40,  7.21s/it]Train/test accuracy after 37 epochs: 78.80/75.32:  74%|███████▍  | 37/50 [04:33<01:33,  7.21s/it]Train/test accuracy after 38 epochs: 80.60/77.21:  74%|███████▍  | 37/50 [04:41<01:33,  7.21s/it]Train/test accuracy after 38 epochs: 80.60/77.21:  76%|███████▌  | 38/50 [04:41<01:26,  7.21s/it]Train/test accuracy after 39 epochs: 80.51/76.94:  76%|███████▌  | 38/50 [04:48<01:26,  7.21s/it]Train/test accuracy after 39 epochs: 80.51/76.94:  78%|███████▊  | 39/50 [04:48<01:19,  7.20s/it]Train/test accuracy after 40 epochs: 80.24/76.56:  78%|███████▊  | 39/50 [04:55<01:19,  7.20s/it]Train/test accuracy after 40 epochs: 80.24/76.56:  80%|████████  | 40/50 [04:55<01:11,  7.19s/it]Train/test accuracy after 41 epochs: 81.65/77.95:  80%|████████  | 40/50 [05:02<01:11,  7.19s/it]Train/test accuracy after 41 epochs: 81.65/77.95:  82%|████████▏ | 41/50 [05:02<01:05,  7.22s/it]Train/test accuracy after 42 epochs: 82.22/78.31:  82%|████████▏ | 41/50 [05:09<01:05,  7.22s/it]Train/test accuracy after 42 epochs: 82.22/78.31:  84%|████████▍ | 42/50 [05:09<00:57,  7.23s/it]Train/test accuracy after 43 epochs: 80.30/76.55:  84%|████████▍ | 42/50 [05:17<00:57,  7.23s/it]Train/test accuracy after 43 epochs: 80.30/76.55:  86%|████████▌ | 43/50 [05:17<00:50,  7.20s/it]Train/test accuracy after 44 epochs: 82.66/78.74:  86%|████████▌ | 43/50 [05:24<00:50,  7.20s/it]Train/test accuracy after 44 epochs: 82.66/78.74:  88%|████████▊ | 44/50 [05:24<00:43,  7.18s/it]Train/test accuracy after 45 epochs: 83.12/79.06:  88%|████████▊ | 44/50 [05:31<00:43,  7.18s/it]Train/test accuracy after 45 epochs: 83.12/79.06:  90%|█████████ | 45/50 [05:31<00:35,  7.20s/it]Train/test accuracy after 46 epochs: 83.38/79.38:  90%|█████████ | 45/50 [05:38<00:35,  7.20s/it]Train/test accuracy after 46 epochs: 83.38/79.38:  92%|█████████▏| 46/50 [05:38<00:28,  7.23s/it]Train/test accuracy after 47 epochs: 83.67/79.78:  92%|█████████▏| 46/50 [05:45<00:28,  7.23s/it]Train/test accuracy after 47 epochs: 83.67/79.78:  94%|█████████▍| 47/50 [05:45<00:21,  7.21s/it]Train/test accuracy after 48 epochs: 83.79/80.01:  94%|█████████▍| 47/50 [05:53<00:21,  7.21s/it]Train/test accuracy after 48 epochs: 83.79/80.01:  96%|█████████▌| 48/50 [05:53<00:14,  7.21s/it]Train/test accuracy after 49 epochs: 83.83/79.89:  96%|█████████▌| 48/50 [06:00<00:14,  7.21s/it]Train/test accuracy after 49 epochs: 83.83/79.89:  98%|█████████▊| 49/50 [06:00<00:07,  7.20s/it]Train/test accuracy after 50 epochs: 83.94/79.95:  98%|█████████▊| 49/50 [06:07<00:07,  7.20s/it]Train/test accuracy after 50 epochs: 83.94/79.95: 100%|██████████| 50/50 [06:07<00:00,  7.22s/it]Train/test accuracy after 50 epochs: 83.94/79.95: 100%|██████████| 50/50 [06:07<00:00,  7.35s/it]
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:     epoch_i ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:          lr ▂▃▅▇███▇▇▇▇▇▆▆▆▆▆▅▅▅▅▅▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▁▁▁
wandb:    test_acc ▃▄▄▅▃▁▂▂▄▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇▇▇█████████████
wandb:   test_loss ▇▅▅▅▇█▇▇▆▅▄▄▄▃▃▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:   train_acc ▂▄▄▅▃▁▂▂▃▄▄▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇▇████████████
wandb:  train_loss ▇▅▅▅▇██▇▆▅▅▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁
wandb:  update_acc ▂▃▄▄▁▁▂▂▃▄▄▄▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇▇▇▇███▇█████
wandb: update_loss ▆▆▅▅█▇▇▇▆▅▅▄▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:       epoch_i 50
wandb:            lr 2e-05
wandb:      test_acc 79.95
wandb:     test_loss 1.01154
wandb: test_loss_auc 69.70752
wandb:     train_acc 83.938
wandb:    train_loss 0.9309
wandb:    update_acc 80.27344
wandb:   update_loss 0.97396
wandb: 
wandb: 🚀 View run restful-grass-30 at: https://wandb.ai/project_danns/Normalization_DANN_Test/runs/2mtd4h9m
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: /home/mila/r/roy.eyono/scratch/wandb/run-20230324_181801-2mtd4h9m/logs
